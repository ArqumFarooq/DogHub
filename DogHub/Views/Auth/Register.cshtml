@model DogHub.Models.User

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row justify-content-center mt-5">
    <div class="col-md-8">
        <div class="card shadow">
            <div class="card-header bg-dark text-white text-center">
                <h4>Create Your Account</h4>
            </div>
            <div class="card-body">

                @if (!string.IsNullOrEmpty(ViewBag.Message))
                {
                    <div class="alert alert-@ViewBag.Color">
                        @ViewBag.Message
                    </div>
                }

                @using (Html.BeginForm("PostRegister", "Auth", FormMethod.Post, new { @id = "registerForm", @class = "needs-validation", novalidate = "novalidate" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Username</label>
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label">Email</label>
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email", required = "required" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label">Password</label>
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label">Confirm Password</label>
                            @Html.Password("ConfirmPassword", null, new { @class = "form-control", required = "required" })
                        </div>
                    </div>

                    <div class="d-grid">
                        <button type="submit" class="btn btn-dark">Register</button>
                    </div>
                }

                <div class="mt-3 text-center">
                    <p>Already have an account? <a href="@Url.Action("Login", "Auth")">Login here</a></p>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        (() => {
            'use strict';
            const form = document.getElementById('registerForm');
            form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        })();
    </script>
}
